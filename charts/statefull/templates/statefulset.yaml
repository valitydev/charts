apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "statefull.fullname" . }}
  labels:
{{ include "statefull.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ include "statefull.fullname" . }}-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "statefull.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "statefull.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        selector.cilium/release: {{ .Release.Name }}
        selector.vaultinject: {{ .Release.Namespace | default "rbk" }}
      annotations:
      {{- if or .Values.configMap .Values.secret }}
        config/checksum: {{ include "statefull.configHash" . }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.logs.enabled }}
        co.elastic.logs/enabled: "true"
      {{- end }}
      {{- if .Values.logs.json }}
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.overwrite_keys: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/processors.1.decode_json_fields.fields: "log"
        co.elastic.logs/processors.1.decode_json_fields.max_depth: "5"
        co.elastic.logs/processors.1.decode_json_fields.target: ""
        co.elastic.logs/processors.1.decode_json_fields.overwrite_keys: "true"
        co.elastic.logs/processors.1.decode_json_fields.add_error_key: "true"
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "statefull.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- with .Values.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
          {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
          {{- if .Values.livenessProbe.initialDelaySeconds }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- else }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
            initialDelaySeconds: 10
          {{- end }}
          readinessProbe:
          {{- if .Values.readinessProbe.initialDelaySeconds }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
            initialDelaySeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
        {{- end }}
    {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.storage }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.storage }}
      spec:
       {{- toYaml . | nindent 10 }}
      {{- end }}
  {{- end }}

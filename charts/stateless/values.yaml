# Default values for stateless.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

podAnnotations: {}

configMap: {}
#  data: ""

secret: {}
#  data: ""

volumes: ""

volumeMounts: ""

pvc:
  enabled: false
  name: data-pvc
  storage: 3Mi

apiInitContainers:
  enabled: false

extraInitContainers: []

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: api
      port: 8022
    # - name: api
    #   port: 8080

runopts:
  command: []
  args: []
    # - -jar
    # - /opt/binbase/binbase.jar
    # - --management.security.enabled=false

env: []

hook:
  enabled: false
  kind: post-install
  image:
    repository: alpine
    tag: stable
    pullPolicy: IfNotPresent
  command: []
  volumes: []
  volumeMounts: []

livenessProbe:
  httpGet:
    path: /health
    port: api
readinessProbe:
  httpGet:
    path: /health
    port: api

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  servicePort: 8022
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  serviceMonitor:
    enabled: false
    namespace: default
    # Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
    # ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    additionalLabels: {}
    endpoints:
      - port: "api"
        path: /metrics
        scheme: http

logs:
  enabled: true
  json: false

ciliumPolicies: []
  # - name: consul
  #   namespace: default
  #   filters:
  #     - port: 8500
  #       type: TCP
  # - name: kafka
  #   namespace: default
  #   filters:
  #     - port: 9092
  #       type: TCP
  #       rules:
  #         kafka:
  #         - role: produce
  #           topics: 
  #             - bla1
  #             - blah-blah-2
  #         - role: consume
  #           topics:
  #             - bla1
  #             - bla2

cronjob:
  enabled: false
  schedule: "*/1 * * * *"
  image:
    repository: docker.io/nginx
    tag: latest
    pullPolicy: IfNotPresent
  args: []